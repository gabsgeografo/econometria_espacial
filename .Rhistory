# Instalando os pacotes
install.packages("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/CriacaoDeMatrizesAEDE/rgdal_1.6-7", repos = NULL, type = "source")
library(rgdal)
install.packages("remotes")
install.packages("remotes")
library(remotes)
remotes::install_version("rgdal", version = "1.6-7")
#Pacote sf - sera utilizado na visualizacao de dados espaciais
library(sf)
kh.shp <- st_read("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/CriacaoDeMatrizesAEDE", "55mu2500gsd")
# Defina a Projecao Cartografica
proj4string(kh.shp)
# Defina a Projecao Cartografica
proj4string(kh.shp)
library(plm)
library(splm)
library(spdep)
library(sp)
detach("package:spData", unload = TRUE)
library(spData)
detach("package:spdep", unload = TRUE)
library(spdep)
library(plm)
install.packages("plm")
library(plm)
install.packages("splm")
library(splm)
library(plm)
library(splm)
library(spdep)
library(spatialreg)
library(rgdal)
# Chamar os pacotes
library(rgdal)
guarda.shp <- readOGR("C:\Users\Positivo\Desktop\EconometriaEspacial\AugustaRaiher\PainelEspacial", "guarda", encoding = "ISO-8859-1")
guarda.shp <- readOGR("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/PainelEspacial", "guarda", encoding = "ISO-8859-1")
("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/PainelEspacial", "guarda", encoding = "ISO-8859-1")
guarda.shp <- st_read("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/PainelEspacial", "guarda")
library(sf)
guarda.shp <- st_read("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/PainelEspacial", "guarda")
library(plm)
library(splm)
library(spdep)
library(spatialreg)
library(rgdal)
# Pacotes
library(rgdal)
guarda.shp <- readOGR("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/PainelEspacial", "guarda", encoding = "ISO-8859-1")
library(plm)
library(splm)
library(spdep)
install.packages("spatialreg")
(spatialreg)
library(spatialreg)
library(rgdal)
library(sp)
library(spdep)
library(splm)
library(terra)
library(spatial, lib.loc = "C:/Program Files/R/R-4.3.2/library")
# Pacotes
library(rgdal)
guarda.shp <- readOGR("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/PainelEspacial", "guarda", encoding = "ISO-8859-1")
guarda.shp <- readOGR("C:/Users/Positivo/Desktop/EconometriaEspacial/AugustaRaiher/PainelEspacial/guarda", "guarda", encoding = "ISO-8859-1")
# Plotar o mapa
plot(guarda.shp)
str(guarda.shp@data) #O comando str indica as variaveis do shapefile
head(guarda.shp@data)
dados <- guarda.shp@data #Cria um novo objeto
dados <- subset(dados, select=c("CODMUN6","RENDA00", "RENDA10", "THEIL00","THEIL10")) #Seleciona as variaveis
str (dados)
head(dados)
#MATRIZ RAINHA E TORRE PADRONIZADAS
w1 <- nb2listw(poly2nb(guarda.shp, queen = TRUE),style="W") #w1 = Rainha
w2 <- nb2listw(poly2nb(guarda.shp, queen = FALSE),style="W") #w2 = Torre
#MATRIZ K VIZINHOS MAIS PROXIMOS (K-NEAREST NEIGHBORS):
coords <- coordinates(guarda.shp)
IDs <- row.names(guarda.shp@data)
w5 <- nb2listw(knn2nb(knearneigh(coords, k=1),row.names=IDs),style="W") #o valor de k indica a qtde de vizinhos
dados$LAGRENDA00 <- lag.listw(w5, dados$RENDA00) #"lag" indica a defasagem
dados$LAGRENDA10 <- lag.listw(w5, dados$RENDA10)
str(dados)
head(dados)
painel <- function(id, dados){
require(reshape2)
dadosp <- reshape2::melt(dados, id=id)
dadosp$varname <- as.character(gsub("[[:digit:]]", "", dadosp$variable))
dadosp$year <-  as.character(gsub("[[:alpha:]]", "", dadosp$variable))
sp <- split(dadosp, f = dadosp$varname)
dadosp <- data.frame(sp[[1]][,1], sp[[1]]$year)
for(i in 1:length(sp)){
dadosp <- cbind(dadosp, sp[[i]]$value)
}
names(dadosp) <- c("id","ano",names(sp)) #Importante indicar a ordem
return(dadosp) #o "p" no final indica que os dados serao organizados em painel
}
install.packages("reshape2")
library(reshape2)
dadosp <- painel("CODMUN6", dados) #Nao deve se esquecer de indicar a variavel do municipio (pode ser COD, ID, NUM)
View(dadosp)
table(dadosp$id)
install.packages("reshape2")
esp <- THEIL ~ RENDA # Expressa que a Desigualdade (Theil) em funcao da Renda
# A variavel dependente vem ANTES do til "~"
# Para expressar mais variaveis deve se colocar "espaco" "+" "espaco"
fe <- plm(esp, data=dadosp)
library(rgdal)
library(spatialreg)
library(spdep)
library(splm)
library(terra)
library(spatial, lib.loc = "C:/Program Files/R/R-4.3.2/library")
library(plm)
fe <- plm(esp, data=dadosp)
summary(fe)
reg.pooled=plm(esp,data=dadosp, model="pooling")
fe <- plm(esp, data=dadosp)
pFtest(fe,reg.pooled)
re <- plm(esp, data=dadosp, model="random") #"re" india o efeito aleatorio
summary(re)
ph <- phtest(fe, re) # H0: efeitos aleatorios
print(ph)
ph <- phtest(fe, re) # H0: efeitos aleatorios
print(ph)
summary(ph)
ph <- phtest(fe, re) # H0: efeitos aleatorios
print(ph)
test1 <- sphtest(esp, data = dadosp, listw = w5, spatial.model = "error", method = "GM")
test1
cd <- pcdtest(esp, test="cd",data=dadosp) # H0: ausencia de dependencia CS (cross-section)
print(cd)
CDp.pool<-pcdtest(plm(esp, data=dadosp, model="pooling"),listw=w5, test="cd")
print(CDp.pool)
modOLS <- plm(esp, data=dadosp)
summary(modOLS)
install.packages("slmtest", repos = "http://R-Forge.R-project.org")
modSARef <- spml(esp, data=dadosp, listw=w5, lag=TRUE, model="within", effect="individual", spatial.error="none", quiet=FALSE)
summary(modSARef)
impSARef <- impacts(modSARef, listw=w5, time=2)
summary(impSARef, zstats=TRUE, short=TRUE)
modSARef$logLik =-1970.867
modSARef$logLik
modSARef <- spml(esp, data=dadosp, listw=w5, lag=TRUE, model="within", effect="individual", spatial.error="none", quiet=FALSE) #Modelo SAR de Efeito Fixo
summary(modSARef)
impSARef <- impacts(modSARef, listw=w5, time=2) #time = tempo (em anos)
summary(impSARef, zstats=TRUE, short=TRUE)
# AIC and BIC function for splm object #
AICsplm = function(object, k=2, criterion=c("AIC", "BIC")){
sp = summary(object)
l = sp$logLik
np = length(coef(sp))
N = nrow(sp$model)
if (sp$effects=="sptpfe") {
n = length(sp$res.eff[[1]]$res.sfe)
T = length(sp$res.eff[[1]]$res.tfe)
np = np+n+T
}
if (sp$effects=="spfe") {
n = length(sp$res.eff[[1]]$res.sfe)
np = np+n+1
}
if (sp$effects=="tpfe") {
T = length(sp$res.eff[[1]]$res.tfe)
np = np+T+1
}
if(criterion=="AIC"){
aic = -2*l+k*np
names(aic) = "AIC"
return(aic)
}
if(criterion=="BIC"){
bic = -2*l+log(N)*np
names(bic) = "BIC"
return(bic)
}
}
AICsplm (modSARef, criterion="AIC")
modsarefgmm<-spgm(esp, data = dadosp, listw = w5, model = "within",lag = TRUE, spatial.error = FALSE,moments = " ivsplm")
summary(modsarefgmm)
# AIC and BIC function for splm object #
AICsplm = function(object, k=2, criterion=c("AIC", "BIC")){
sp = summary(object)
l = sp$logLik
np = length(coef(sp))
N = nrow(sp$model)
if (sp$effects=="sptpfe") {
n = length(sp$res.eff[[1]]$res.sfe)
T = length(sp$res.eff[[1]]$res.tfe)
np = np+n+T
}
if (sp$effects=="spfe") {
n = length(sp$res.eff[[1]]$res.sfe)
np = np+n+1
}
if (sp$effects=="tpfe") {
T = length(sp$res.eff[[1]]$res.tfe)
np = np+T+1
}
if(criterion=="AIC"){
aic = -2*l+k*np
names(aic) = "AIC"
return(aic)
}
if(criterion=="BIC"){
bic = -2*l+log(N)*np
names(bic) = "BIC"
return(bic)
}
}
AICsplm (modSARef, criterion="AIC")
# AIC and BIC function for splm object #
AICsplm = function(object, k=2, criterion=c("AIC", "BIC")){
sp = summary(object)
l = sp$logLik
np = length(coef(sp))
N = nrow(sp$model)
if (sp$effects=="sptpfe") {
n = length(sp$res.eff[[1]]$res.sfe)
T = length(sp$res.eff[[1]]$res.tfe)
np = np+n+T
}
if (sp$effects=="spfe") {
n = length(sp$res.eff[[1]]$res.sfe)
np = np+n+1
}
if (sp$effects=="tpfe") {
T = length(sp$res.eff[[1]]$res.tfe)
np = np+T+1
}
if(criterion=="AIC"){
aic = -2*l+k*np
names(aic) = "AIC"
return(aic)
}
if(criterion=="BIC"){
bic = -2*l+log(N)*np
names(bic) = "BIC"
return(bic)
}
}
AICsplm (modSARef, criterion="AIC")
cd <- pcdtest(esp, test="cd",data=dadosp) # H0: ausencia de dependencia CS (cross-section)
cd <- pcdtest(esp, test="cd",data=dadosp) # H0: ausencia de dependencia CS (cross-section)
cd <- pcdtest(esp, test="cd",data=dadosp) # H0: ausencia de dependencia CS (cross-section)
CDp.pool<-pcdtest(plm(esp, data=dadosp, model="pooling"),listw=w5, test="cd")
modOLS <- plm(esp, data=dadosp)
residuo<-resid(modOLS)
write.csv(residuo,  file="C:/Users/apeli/OneDrive/Documentos/aula econometria espacial/videos/video 3 - painel espacial/guarda/residuopainel.csv", quote=F, row.names=F)
